# Remote server connection configuration
- name: Config vm adrian
  hosts: adrianvm #,proxy # group in /etc/ansible/hosts (create if not exists)
  remote_user: azureuser # user selected to connect (previously created with vm azure)
  become: yes # become root

# GENERAL TASKS
  tasks:
## upgrad & update remote machine
  - name: Upgrade
    apt:
      upgrade: dist # equivalent to apt-get upgrade

  - name: Update
    apt:
      update_cache: yes # equivalent to apt-get update
      cache_valid_time: 3600 # run only if last update time is less than 3600s 

## Install custom packages
    
  - name: Install packages
    apt:
      pkg: # for each package
      - bash
      - python-apt
      - sudo
      - git
      - python-pip
      - python3-pip
      - libicu-dev
  
  - name: Add user 
    ansible.builtin.user:
      name: adrianruizmora
      shell: /bin/bash # run as default shell
      groups: root,sudo # adds user to root and sudo group
      # created with:
      # python
      # import crypt
      # crypt.crypt("This is my Password")
      password: $6$KOXBGnfixyEBHBx0$c09Ki9ZjzMx7.cdmi9ojqwKDhR.Q5pc0.41Yrk3wwaxUbL1i0IpYfNPtmdBkkM0NHHUG7bfszwS8nE6BMy11X1
      append: yes # if set to yes user groups are not overwritted 

  - name: create ssh key for user adrian
    ansible.builtin.user:
      # everything here is run on remote machine
      name: adrianruizmora
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa # if directory does not exists it will be created automatically

  - name: create empty file
    file: # creates file "authorized_keys" on the given path 
      path: "/home/adrianruizmora/.ssh/authorized_keys"
      state: touch

  - name: put ssh public key on authorized keys 
    ansible.builtin.copy:
      src: /home/adrianruizmora/.ssh/id_rsa.pub # copys content of public ssh key on local machine
      dest: /home/adrianruizmora/.ssh/authorized_keys # puts content authorized_keys file (overwrites content)

  - name: create alias
    ansible.builtin.copy:
      src: .alias # copys content on .alias file
      dest: /home/adrianruizmora/.bashrc # puts content on .bashrc file

    
    
  # - name: Git clone libretranslate 
  #   ansible.builtin.git:
  #     repo: https://github.com/uav4geo/LibreTranslate
  #     dest: /home/adrianruizmora/github/libretranslate
  #     single_branch: yes
  #     update: no
  #     version: main
  
  # - name: Removing pyciu from requirements
  #   ansible.builtin.shell: sed -ie '/pyicu/d' requirements.txt
  #   args:
  #     chdir: /home/adrianruizmora/github/libretranslate

  # - name: Installing requirements
  #   ansible.builtin.shell: pip install -r requirements.txt --no-cache-dir
  #   args:
  #     chdir: /home/adrianruizmora/github/libretranslate

  # - name: Install PyICU
  #   pip:
  #     name: pyicu

  # - name: Running app
  #   ansible.builtin.shell: python main.py
  #   args:
  #     chdir: /home/adrianruizmora/github/libretranslate
